{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\mern-blog\\\\client\\\\src\\\\pages\\\\RegisterPage.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport default function RegisterPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert('registration successful');\n    } else {\n      alert('registration failed');\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: ev => setUsername(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    value: password,\n    onChange: ev => setPassword(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Register\"));\n}","map":{"version":3,"names":["React","useState","RegisterPage","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","createElement","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target"],"sources":["C:/Users/LENOVO/Desktop/mern-blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import React from \"react\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function RegisterPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  async function register(ev) {\r\n    ev.preventDefault();\r\n    const response = await fetch('http://localhost:4000/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify({username,password}),\r\n      headers: {'Content-Type':'application/json'},\r\n    });\r\n    if (response.status === 200) {\r\n      alert('registration successful');\r\n    } else {\r\n      alert('registration failed');\r\n    }\r\n  }\r\n  return (\r\n    <form className=\"register\" onSubmit={register}>\r\n      <h1>Register</h1>\r\n      <input type=\"text\"\r\n             placeholder=\"username\"\r\n             value={username}\r\n             onChange={ev => setUsername(ev.target.value)}/>\r\n      <input type=\"password\"\r\n             placeholder=\"password\"\r\n             value={password}\r\n             onChange={ev => setPassword(ev.target.value)}/>\r\n      <button>Register</button>\r\n    </form>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAE9B,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeM,QAAQA,CAACC,EAAE,EAAE;IAC1BA,EAAE,CAACC,cAAc,CAAC,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACzCW,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB;IAC7C,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAAC,yBAAyB,CAAC;IAClC,CAAC,MAAM;MACLA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF;EACA,oBACElB,KAAA,CAAAmB,aAAA;IAAMC,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEd,QAAS;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5C3B,KAAA,CAAAmB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,eACjB3B,KAAA,CAAAmB,aAAA;IAAOS,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAE3B,QAAS;IAChB4B,QAAQ,EAAEvB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAACwB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACtD3B,KAAA,CAAAmB,aAAA;IAAOS,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,UAAU;IACtBC,KAAK,EAAEzB,QAAS;IAChB0B,QAAQ,EAAEvB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAACwB,MAAM,CAACF,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACtD3B,KAAA,CAAAmB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CACpB,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module"}